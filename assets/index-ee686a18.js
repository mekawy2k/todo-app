(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();class n{constructor(t){this.trigger=document.getElementById(t),this.root=document.documentElement,this.style=document.documentElement.style,this.toggleTheme=this.toggleTheme.bind(this),this.trigger.addEventListener("click",this.toggleTheme)}toggleTheme(){this.root.getAttribute("data-theme")==="light"?(this.style.setProperty("--background","hsl(235, 21%, 11%)"),this.style.setProperty("--element-background","hsl(235, 24%, 19%)"),this.style.setProperty("--text-main","hsl(236, 33%, 92%)"),this.style.setProperty("--text-mid","hsl(234, 11%, 52%)"),this.style.setProperty("--text-thin","hsl(233, 14%, 35%)"),this.root.setAttribute("data-theme","dark")):(this.style.setProperty("--background","hsl(236, 33%, 92%)"),this.style.setProperty("--element-background","hsl(0, 0%, 98%)"),this.style.setProperty("--text-main","hsl(235, 19%, 35%)"),this.style.setProperty("--text-mid","hsl(236, 9%, 61%)"),this.style.setProperty("--text-thin","hsl(0, 0%, 76%)"),this.root.setAttribute("data-theme","light"))}}class d{constructor(t){this.todoList=t,this.taskList=document.getElementById("task-list"),this.draggingElement=null,this.taskList.addEventListener("dragstart",this.handleDragStart.bind(this)),this.taskList.addEventListener("dragover",this.handleDragOver.bind(this)),this.taskList.addEventListener("dragend",this.handleDragEnd.bind(this)),this.taskList.addEventListener("drop",this.handleDrop.bind(this))}handleDragStart(t){this.draggingElement=t.target,t.dataTransfer.effectAllowed="move",t.target.classList.add("dragging")}handleDragOver(t){t.preventDefault()}handleDragEnd(){this.draggingElement&&(this.draggingElement.classList.remove("dragging"),this.draggingElement=null,this.logTasksArray())}handleDrop(t){t.preventDefault();const e=t.target.closest("li");if(this.draggingElement&&e){const i=this.draggingElement.getAttribute("data-task-order"),s=e.getAttribute("data-task-order");i&&s&&(this.taskList.insertBefore(this.draggingElement,e),this.draggingElement.setAttribute("data-task-order",s),e.setAttribute("data-task-order",i))}}logTasksArray(){const t=Array.from(this.taskList.querySelectorAll("li")).map(e=>({id:e.getAttribute("id"),title:e.querySelector("span").innerText,completed:e.classList.contains("checked")}));console.log(t),this.todoList.updateAllTasks(t)}}class h{constructor(t="",e=!1){this.id=Math.floor(Math.random()*1e5),this.title=t,this.completed=e}}class c{constructor(){this._tasks=JSON.parse(localStorage.getItem("tasks-list-db"))||[],this._filter="all"}get tasks(){switch(this._filter){case"completed":return this._tasks.filter(t=>t.completed===!0);case"incompleted":return this._tasks.filter(t=>t.completed===!1);default:return this._tasks}}get filter(){return this._filter}setFilter(t){if(typeof t=="string"&&(t==="completed"||t==="incompleted"||t==="all"))this._filter=t;else throw new Error("Invalid filter value.")}get leftItems(){return this._tasks.reduce((t,e)=>t+(e.completed?0:1),0)}_updateLocalStorage(){localStorage.setItem("tasks-list-db",JSON.stringify(this._tasks))}addTask(t){if(!t.trim())throw new Error("Task title cannot be empty.");const e=new h(t);this._tasks.push(e),this._updateLocalStorage()}checkTask(t){const e=this._tasks.findIndex(i=>i.id===t);if(e!==-1)this._tasks[e].completed=!this._tasks[e].completed,this._updateLocalStorage();else throw new Error(`Task with ID ${t} not found.`)}deleteTask(t){const e=this._tasks.findIndex(i=>i.id===t);if(e!==-1)this._tasks.splice(e,1),this._updateLocalStorage();else throw new Error(`Task with ID ${t} not found.`)}clearCompleted(){this._tasks=this._tasks.filter(t=>!t.completed),this._updateLocalStorage()}updateAllTasks(t){this._tasks=t,this._updateLocalStorage()}}class u{constructor(t,{formId:e,listId:i,filterGroupId:s,clearButtonId:r,counterId:a}){this.todolist=t,this.inputForm=document.getElementById(e),this.list=document.getElementById(i),this.filterGroup=document.getElementById(s),this.clearButton=document.getElementById(r),this.counter=document.getElementById(a),this.setHandlers(),this.updateUi()}setHandlers(){this.formHandler(),this.clearCompletedHandler(),this.filterGroupHandler()}updateUi(){this.renderTasks(),this.renderLeftItems()}renderTasks(){this.list.innerHTML="";const t=document.createDocumentFragment();if(this.todolist.tasks.length)this.todolist.tasks.map(e=>{const i=document.createElement("li");i.setAttribute("id",e.id),i.key=e.id,i.setAttribute("data-task-order",e.id),i.setAttribute("draggable","true"),i.setAttribute("class",e.completed?"checked":"");const s=document.createElement("button");s.classList.add("check"),s.addEventListener("click",()=>{this.todolist.checkTask(e.id),this.updateUi()}),i.appendChild(s);const r=document.createElement("span");r.innerText=e.title,i.appendChild(r);const a=document.createElement("button");a.classList.add("cross"),a.addEventListener("click",()=>{this.todolist.deleteTask(e.id),this.updateUi()}),i.appendChild(a),t.appendChild(i)}),this.list.appendChild(t);else{const e=document.createElement("li");e.classList.add("empty"),e.innerText="No tasks to show",t.appendChild(e)}this.list.appendChild(t)}renderLeftItems(){this.counter.innerText=`Left tasks: ${this.todolist.leftItems}`}formHandler(){this.inputForm.addEventListener("submit",t=>{t.preventDefault(),this.todolist.addTask(this.inputForm.title.value),this.inputForm.title.value="",this.updateUi()})}clearCompletedHandler(){this.clearButton.addEventListener("click",()=>{this.todolist.clearCompleted(),this.updateUi()})}filterGroupHandler(){this.filterGroup.addEventListener("click",t=>{if(t.target.tagName==="BUTTON"){for(const e of this.filterGroup.children)e.classList.remove("active");this.todolist.setFilter(t.target.dataset.filter),t.target.classList.add("active")}this.updateUi()})}}const g=new n("theme-toggle-button");g.toggleTheme();const o=new c;new d(o);new u(o,{formId:"task-input",listId:"task-list",filterGroupId:"filter-group",clearButtonId:"clear-completed",counterId:"left-items"});
